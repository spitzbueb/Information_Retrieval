package ch.phischa;

import java.io.File;
import java.io.FileFilter;
import java.io.FileReader;
import java.io.IOException;

import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.FSDirectory;
import org.apache.lucene.util.Version;

public class Index {
	
	public IndexWriter writer;
	long dauer;
	
	public Index(String pfad)
	{
		String pfadIndex = pfad + File.separator + "Index";
		int numIndexed;
		
		long start = System.currentTimeMillis();
		try
		{
			numIndexed = index(pfad,new FileFilter());
		} finally {
			close();
		}
		
		long end = System.currentTimeMillis();
		
		System.out.println("Indexing " + numIndexed + " in " + (end - start) + " Milliseconds");
		dauer = end - start;
	}
	
	@SuppressWarnings("deprecation")
	public void Indexer(String indexDir) throws IOException
	{
		Directory dir = FSDirectory.open(new File(indexDir));
		writer = new IndexWriter(dir,new StandardAnalyzer(Version.LUCENE_30),true,IndexWriter.MaxFieldLength.UNLIMITED);
	}
	
	public void close() throws IOException
	{
		writer.close();
	}
	
	
}